{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Escritorio\\\\todo-list-API\\\\todo\\\\src\\\\input.js\";\nimport React, { useState, useEffect } from 'react';\nimport Notarea from './tareas';\n\nconst Apa = props => {\n  const [tarea, setTarea] = useState([]);\n  const [input, setInput] = useState('');\n  const id = tarea.length ? tarea[tarea.length - 1].id + 1 : 1;\n\n  const enviarTarea = (e, tarea, setTarea, input, setInput, data) => {\n    e.preventDefault();\n    const newList = [...tarea, {\n      id: id,\n      label: input,\n      done: true\n    }];\n    setTarea(newList);\n    setInput('');\n    fetch('https://assets.breatheco.de/apis/fake/todos/user/nicolas703', {\n      method: \"PUT\",\n      body: JSON.stringify(newList),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => {\n      console.log(resp.ok);\n      console.log(resp.status);\n      console.log(resp.text());\n      return resp.json;\n    }).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error('El error es ' + error);\n    });\n  };\n\n  const deleteTarea = (id, tarea, setTarean) => {\n    setTarea(tarea.filter(note => note.id !== id));\n    const newList = [...tarea, {\n      id: id,\n      label: input,\n      done: true\n    }];\n    fetch('https://assets.breatheco.de/apis/fake/todos/user/nicolas703', {\n      method: \"PUT\",\n      body: JSON.stringify(newList),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => {\n      console.log(resp.ok);\n      console.log(resp.status);\n      console.log(resp.text());\n      return resp.json;\n    }).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error('El error es ' + error);\n    });\n  };\n\n  const queHay = () => {\n    fetch('https://assets.breatheco.de/apis/fake/todos/user/nicolas703', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(res.status);\n      console.log(res.text());\n    }).then(data => {\n      console.log(data);\n    }).then(data => {\n      console.log(data);\n    }).catch(error => console.error('Error ', error));\n  };\n\n  useEffect(() => {\n    queHay();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"titulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"To Do List\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"libreta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dib\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => enviarTarea(e, tarea, setTarea, input, setInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"A\\xF1ade una tarea\",\n    className: \"nota\",\n    onChange: e => setInput(e.target.value),\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"agg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"+\")), tarea.map(note => /*#__PURE__*/React.createElement(Notarea, {\n    key: tarea,\n    label: note.label,\n    id: note.id,\n    deleteTarea: id => deleteTarea(id, tarea, setTarea),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, note)))));\n};\n\nexport default Apa;","map":{"version":3,"sources":["C:/Users/nicol/OneDrive/Escritorio/todo-list-API/todo/src/input.js"],"names":["React","useState","useEffect","Notarea","Apa","props","tarea","setTarea","input","setInput","id","length","enviarTarea","e","data","preventDefault","newList","label","done","fetch","method","body","JSON","stringify","headers","then","resp","console","log","ok","status","text","json","catch","error","deleteTarea","setTarean","filter","note","queHay","res","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Notarea from './tareas'\r\n\r\nconst Apa = props => {\r\n\r\n    const [tarea, setTarea] = useState([])\r\n    const [input, setInput] = useState('')\r\n\r\n    const id = (tarea.length) ? tarea[tarea.length - 1].id + 1 : 1\r\n    const enviarTarea = (e, tarea, setTarea, input, setInput, data) => {\r\n        e.preventDefault()\r\n        const newList = [...tarea, { id: id, label: input, done: true }]\r\n\r\n        setTarea(newList)\r\n        setInput('')\r\n\r\n\r\n        fetch('https://assets.breatheco.de/apis/fake/todos/user/nicolas703', {\r\n\r\n            method: \"PUT\",\r\n            body: JSON.stringify(newList),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(resp => {\r\n                console.log(resp.ok);\r\n                console.log(resp.status);\r\n                console.log(resp.text());\r\n                return resp.json;\r\n            })\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('El error es ' + error);\r\n            });\r\n\r\n\r\n    }\r\n    const deleteTarea = (id, tarea, setTarean) => {\r\n        setTarea(tarea.filter(note => note.id !== id))\r\n\r\n        const newList = [...tarea, { id: id, label: input, done: true }]\r\n\r\n        fetch('https://assets.breatheco.de/apis/fake/todos/user/nicolas703', {\r\n\r\n            method: \"PUT\",\r\n            body: JSON.stringify(newList),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(resp => {\r\n                console.log(resp.ok);\r\n                console.log(resp.status);\r\n                console.log(resp.text());\r\n                return resp.json;\r\n            })\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('El error es ' + error);\r\n            });\r\n    }\r\n\r\n    const queHay = () => {\r\n        fetch('https://assets.breatheco.de/apis/fake/todos/user/nicolas703', {\r\n            method: \"GET\",\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        })\r\n            .then(res => {\r\n                console.log(res.status)\r\n                console.log(res.text());\r\n            })\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n\r\n            .then((data) => {\r\n                console.log(data);\r\n            })\r\n\r\n            .catch(error => console.error('Error ', error));\r\n    };\r\n\r\n    useEffect(() => {\r\n        queHay();\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"titulo\">To Do List</h1>\r\n            <div className=\"libreta\">\r\n                <div className=\"dib\">\r\n                    <form onSubmit={(e) => enviarTarea(e, tarea, setTarea, input, setInput)}>\r\n                        <input placeholder=\"Añade una tarea\" className=\"nota\" onChange={(e) => setInput(e.target.value)} value={input} />\r\n                        <button className=\"agg\">+</button>\r\n                    </form>\r\n                    {tarea.map((note) => (\r\n                        <Notarea key={tarea} label={note.label} id={note.id} deleteTarea={(id) => deleteTarea(id, tarea, setTarea)}>{note}</Notarea>\r\n\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default Apa; "]},"metadata":{},"sourceType":"module"}