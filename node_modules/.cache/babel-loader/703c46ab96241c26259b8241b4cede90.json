{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Escritorio\\\\todo-list-API\\\\todo\\\\src\\\\input.js\";\nimport React, { useState } from 'react';\nimport Notarea from './tareas';\n\nconst enviarTarea = (e, tarea, setTarea, input, setInput) => {\n  e.preventDefault();\n  const id = tarea.length ? tarea[tarea.length - 1].id + 1 : 1;\n  setTarea([...tarea, {\n    id: id,\n    nota: input\n  }]);\n  setInput('');\n};\n\nconst deleteTarea = (id, tarea, setTarea) => {\n  setTarea(tarea.filter(note => note.id !== id));\n}; // let url = \"https://assets.breatheco.de/apis/fake/todos/user/nicolas703\";\n// let options = {\n//     method: 'GET',\n//     headers: {\n//         'content-type': 'application/json'\n//     }\n// };\n// fetch(url, options)\n//     .then(res=>{\n//         if(res.status>= 200 && res.status<300){\n//             console.log(\"Malandro ese request\");\n//             return res.json();\n//         }\n//         else{\n//             console.log('Que ladilla otro error ${res.status} en esa tochada');\n//         }\n//     })\n//     .then(body=>{\n//         console.log(\"Este es el body del request\", body);\n//         let html= body.map(t => \"<li>\"+t.label+\"</li>\").join(\"\");\n//         html=\"<ul>\"+html+\"</ul>\";\n//         console.log(html)\n//     })\n//     .catch\n\n\nexport default (() => {\n  const [tarea, setTarea] = useState([]);\n  const [input, setInput] = useState(''); // fetch('http://assets.breatheco.de/apis/fake/todos/user/alesanchezr', {\n  //     method: \"PUT\",\n  //     body: JSON.stringify(todos),\n  //     headers: {\n  //         \"Content-Type\": \"application/json\"\n  //     }\n  // })\n  //     .then(resp => {\n  //         console.log(resp.ok); // Será true (verdad) si la respuesta es exitosa.\n  //         console.log(resp.status); // el código de estado = 200 o código = 400 etc.\n  //         console.log(resp.text()); // Intentará devolver el resultado exacto como cadena (string)\n  //         return resp.json(); // (regresa una promesa) will try to parse the result as json as return a promise that you can .then for results\n  //     })\n  //     .then(data => {\n  //         //Aquí es donde debe comenzar tu código después de que finalice la búsqueda\n  //         console.log(data); //esto imprimirá en la consola el objeto exacto recibido del servidor\n  //     })\n  //     .catch(error => {\n  //         //manejo de errores\n  //         console.log(error);\n  //     });\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"titulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"To Do List\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"libreta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dib\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => enviarTarea(e, tarea, setTarea, input, setInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"A\\xF1ade una tarea\",\n    className: \"nota\",\n    onChange: e => setInput(e.target.value),\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"agg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"+\")), tarea.map(note => /*#__PURE__*/React.createElement(Notarea, {\n    nota: note.nota,\n    id: note.id,\n    deleteTarea: id => deleteTarea(id, tarea, setTarea),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })))));\n});","map":{"version":3,"sources":["C:/Users/nicol/OneDrive/Escritorio/todo-list-API/todo/src/input.js"],"names":["React","useState","Notarea","enviarTarea","e","tarea","setTarea","input","setInput","preventDefault","id","length","nota","deleteTarea","filter","note","target","value","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAIA,MAAMC,WAAW,GAAG,CAACC,CAAD,EAAIC,KAAJ,EAAWC,QAAX,EAAqBC,KAArB,EAA4BC,QAA5B,KAAyC;AACzDJ,EAAAA,CAAC,CAACK,cAAF;AACA,QAAMC,EAAE,GAAIL,KAAK,CAACM,MAAP,GAAiBN,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,CAAwBD,EAAxB,GAA6B,CAA9C,GAAkD,CAA7D;AAEAJ,EAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEK,IAAAA,EAAE,EAAEA,EAAN;AAAUE,IAAAA,IAAI,EAAEL;AAAhB,GAAX,CAAD,CAAR;AACAC,EAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,CAND;;AAQA,MAAMK,WAAW,GAAG,CAACH,EAAD,EAAKL,KAAL,EAAYC,QAAZ,KAAyB;AACzCA,EAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH,CAFD,C,CAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA,gBAAe,MAAM;AACjB,QAAM,CAACL,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CAFiB,CAKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,sBACI,uDACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAGG,CAAD,IAAOD,WAAW,CAACC,CAAD,EAAIC,KAAJ,EAAWC,QAAX,EAAqBC,KAArB,EAA4BC,QAA5B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,WAAW,EAAC,oBAAnB;AAAqC,IAAA,SAAS,EAAC,MAA/C;AAAsD,IAAA,QAAQ,EAAGJ,CAAD,IAAOI,QAAQ,CAACJ,CAAC,CAACY,MAAF,CAASC,KAAV,CAA/E;AAAiG,IAAA,KAAK,EAAEV,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADJ,EAMKF,KAAK,CAACa,GAAN,CAAUH,IAAI,iBACX,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,IAAI,CAACH,IAApB;AAA0B,IAAA,EAAE,EAAEG,IAAI,CAACL,EAAnC;AAAuC,IAAA,WAAW,EAAGA,EAAD,IAAQG,WAAW,CAACH,EAAD,EAAKL,KAAL,EAAYC,QAAZ,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CANL,CADJ,CAFJ,CADJ;AAkBH,CA/CD","sourcesContent":["import React, { useState } from 'react'\r\nimport Notarea from './tareas'\r\n\r\n\r\n\r\nconst enviarTarea = (e, tarea, setTarea, input, setInput) => {\r\n    e.preventDefault()\r\n    const id = (tarea.length) ? tarea[tarea.length - 1].id + 1 : 1\r\n\r\n    setTarea([...tarea, { id: id, nota: input }])\r\n    setInput('')\r\n}\r\n\r\nconst deleteTarea = (id, tarea, setTarea) => {\r\n    setTarea(tarea.filter(note => note.id !== id))\r\n}\r\n\r\n// let url = \"https://assets.breatheco.de/apis/fake/todos/user/nicolas703\";\r\n\r\n// let options = {\r\n//     method: 'GET',\r\n//     headers: {\r\n//         'content-type': 'application/json'\r\n//     }\r\n// };\r\n\r\n// fetch(url, options)\r\n//     .then(res=>{\r\n//         if(res.status>= 200 && res.status<300){\r\n//             console.log(\"Malandro ese request\");\r\n//             return res.json();\r\n//         }\r\n//         else{\r\n//             console.log('Que ladilla otro error ${res.status} en esa tochada');\r\n//         }\r\n//     })\r\n//     .then(body=>{\r\n//         console.log(\"Este es el body del request\", body);\r\n//         let html= body.map(t => \"<li>\"+t.label+\"</li>\").join(\"\");\r\n//         html=\"<ul>\"+html+\"</ul>\";\r\n//         console.log(html)\r\n//     })\r\n//     .catch\r\n\r\n\r\n\r\n\r\nexport default () => {\r\n    const [tarea, setTarea] = useState([])\r\n    const [input, setInput] = useState('')\r\n\r\n\r\n    // fetch('http://assets.breatheco.de/apis/fake/todos/user/alesanchezr', {\r\n    //     method: \"PUT\",\r\n    //     body: JSON.stringify(todos),\r\n    //     headers: {\r\n    //         \"Content-Type\": \"application/json\"\r\n    //     }\r\n    // })\r\n    //     .then(resp => {\r\n    //         console.log(resp.ok); // Será true (verdad) si la respuesta es exitosa.\r\n    //         console.log(resp.status); // el código de estado = 200 o código = 400 etc.\r\n    //         console.log(resp.text()); // Intentará devolver el resultado exacto como cadena (string)\r\n    //         return resp.json(); // (regresa una promesa) will try to parse the result as json as return a promise that you can .then for results\r\n    //     })\r\n    //     .then(data => {\r\n    //         //Aquí es donde debe comenzar tu código después de que finalice la búsqueda\r\n    //         console.log(data); //esto imprimirá en la consola el objeto exacto recibido del servidor\r\n    //     })\r\n    //     .catch(error => {\r\n    //         //manejo de errores\r\n    //         console.log(error);\r\n    //     });\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"titulo\">To Do List</h1>\r\n            <div className=\"libreta\">\r\n                <div className=\"dib\">\r\n                    <form onSubmit={(e) => enviarTarea(e, tarea, setTarea, input, setInput)}>\r\n                        <input placeholder=\"Añade una tarea\" className=\"nota\" onChange={(e) => setInput(e.target.value)} value={input} />\r\n                        <button className=\"agg\">+</button>\r\n\r\n                    </form>\r\n                    {tarea.map(note => (\r\n                        <Notarea nota={note.nota} id={note.id} deleteTarea={(id) => deleteTarea(id, tarea, setTarea)} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}