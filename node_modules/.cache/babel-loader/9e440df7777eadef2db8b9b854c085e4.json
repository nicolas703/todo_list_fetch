{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Escritorio\\\\todo-list-API\\\\todo\\\\src\\\\input.js\";\nimport React, { useState } from 'react';\nimport Notarea from './tareas';\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getTodo = url => {\n      fetch(url).then(response => {\n        console.log(response.status);\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          todos: data\n        });\n      });\n    };\n\n    this.state = {\n      lista: ['Cras justo odio', 'Dapibus ac facilisis in', 'Morbi leo risus', 'Porta ac consectetur ac', 'Vestibulum at eros'],\n      todos: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Mounted Component...\");\n    this.setState({\n      lista: this.state.lista.concat('Hola de nuevo')\n    });\n    this.getTodo(\"https://jsonplaceholder.typicode.com/todos\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, this.state.lista.map((item, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 41\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          todos: []\n        }); //this.getTodo(\"https://jsonplaceholder.typicode.com/todos\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Click\"))), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"titulo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"To Do List\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"libreta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dib\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => enviarTarea(e, tarea, setTarea, input, setInput),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"A\\xF1ade una tarea\",\n      className: \"nota\",\n      onChange: e => setInput(e.target.value),\n      value: input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"agg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"+\")), tarea.map(note => /*#__PURE__*/React.createElement(Notarea, {\n      nota: note.nota,\n      id: note.id,\n      deleteTarea: id => deleteTarea(id, tarea, setTarea),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default MyComponent;\n\nconst enviarTarea = (e, tarea, setTarea, input, setInput) => {\n  e.preventDefault();\n  const id = tarea.length ? tarea[tarea.length - 1].id + 1 : 1;\n  setTarea([...tarea, {\n    id: id,\n    nota: input\n  }]);\n  setInput('');\n};\n\nconst deleteTarea = (id, tarea, setTarea) => {\n  setTarea(tarea.filter(note => note.id !== id));\n}; // let url = \"https://assets.breatheco.de/apis/fake/todos/user/nicolas703\";\n// let options = {\n//     method: 'GET',\n//     headers: {\n//         'content-type': 'application/json'\n//     }\n// };\n// fetch(url, options)\n//     .then(res=>{\n//         if(res.status>= 200 && res.status<300){\n//             console.log(\"Malandro ese request\");\n//             return res.json();\n//         }\n//         else{\n//             console.log('Que ladilla otro error ${res.status} en esa tochada');\n//         }\n//     })\n//     .then(body=>{\n//         console.log(\"Este es el body del request\", body);\n//         let html= body.map(t => \"<li>\"+t.label+\"</li>\").join(\"\");\n//         html=\"<ul>\"+html+\"</ul>\";\n//         console.log(html)\n//     })\n//     .catch\n// export default () => {\n// fetch('http://assets.breatheco.de/apis/fake/todos/user/alesanchezr', {\n//     method: \"PUT\",\n//     body: JSON.stringify(todos),\n//     headers: {\n//         \"Content-Type\": \"application/json\"\n//     }\n// })\n//     .then(resp => {\n//         console.log(resp.ok); // Será true (verdad) si la respuesta es exitosa.\n//         console.log(resp.status); // el código de estado = 200 o código = 400 etc.\n//         console.log(resp.text()); // Intentará devolver el resultado exacto como cadena (string)\n//         return resp.json(); // (regresa una promesa) will try to parse the result as json as return a promise that you can .then for results\n//     })\n//     .then(data => {\n//         //Aquí es donde debe comenzar tu código después de que finalice la búsqueda\n//         console.log(data); //esto imprimirá en la consola el objeto exacto recibido del servidor\n//     })\n//     .catch(error => {\n//         //manejo de errores\n//         console.log(error);\n//     });\n//     return (\n//         <>\n//         </>\n//     )\n// }","map":{"version":3,"sources":["C:/Users/nicol/OneDrive/Escritorio/todo-list-API/todo/src/input.js"],"names":["React","useState","Notarea","MyComponent","Component","constructor","props","getTodo","url","fetch","then","response","console","log","status","json","data","setState","todos","state","lista","componentDidMount","concat","render","map","item","i","e","enviarTarea","tarea","setTarea","input","setInput","target","value","note","nota","id","deleteTarea","preventDefault","length","filter"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Notarea from './tareas'\r\n\r\n\r\nclass MyComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lista: [\r\n                'Cras justo odio',\r\n                'Dapibus ac facilisis in',\r\n                'Morbi leo risus',\r\n                'Porta ac consectetur ac',\r\n                'Vestibulum at eros'\r\n            ],\r\n            todos: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        console.log(\"Mounted Component...\");\r\n        this.setState({\r\n            lista: this.state.lista.concat('Hola de nuevo')\r\n        })\r\n        this.getTodo(\"https://jsonplaceholder.typicode.com/todos\");\r\n    }\r\n    getTodo = url => {\r\n        fetch(url)\r\n            .then((response) => {\r\n                console.log(response.status)\r\n                return response.json()\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n                this.setState({\r\n                    todos: data\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                        <ul className=\"list-group\">\r\n                            {\r\n                                this.state.lista.map((item, i) => {\r\n                                    return (\r\n                                        <li key={i} className=\"list-group-item\">{item}</li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        <button onClick={() => {\r\n                            this.setState({\r\n                                todos: []\r\n                            })\r\n                            //this.getTodo(\"https://jsonplaceholder.typicode.com/todos\")\r\n                        }}>Click</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                                    \r\n\r\n                <h1 className=\"titulo\">To Do List</h1>\r\n                <div className=\"libreta\">\r\n                    <div className=\"dib\">\r\n                        <form onSubmit={(e) => enviarTarea(e, tarea, setTarea, input, setInput)}>\r\n                            <input placeholder=\"Añade una tarea\" className=\"nota\" onChange={(e) => setInput(e.target.value)} value={input} />\r\n                            <button className=\"agg\">+</button>\r\n\r\n                        </form>\r\n                        {tarea.map(note => (\r\n                            <Notarea nota={note.nota} id={note.id} deleteTarea={(id) => deleteTarea(id, tarea, setTarea)} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MyComponent;\r\n\r\nconst enviarTarea = (e, tarea, setTarea, input, setInput) => {\r\n    e.preventDefault()\r\n    const id = (tarea.length) ? tarea[tarea.length - 1].id + 1 : 1\r\n\r\n    setTarea([...tarea, { id: id, nota: input }])\r\n    setInput('')\r\n}\r\n\r\nconst deleteTarea = (id, tarea, setTarea) => {\r\n    setTarea(tarea.filter(note => note.id !== id))\r\n}\r\n\r\n// let url = \"https://assets.breatheco.de/apis/fake/todos/user/nicolas703\";\r\n\r\n// let options = {\r\n//     method: 'GET',\r\n//     headers: {\r\n//         'content-type': 'application/json'\r\n//     }\r\n// };\r\n\r\n// fetch(url, options)\r\n//     .then(res=>{\r\n//         if(res.status>= 200 && res.status<300){\r\n//             console.log(\"Malandro ese request\");\r\n//             return res.json();\r\n//         }\r\n//         else{\r\n//             console.log('Que ladilla otro error ${res.status} en esa tochada');\r\n//         }\r\n//     })\r\n//     .then(body=>{\r\n//         console.log(\"Este es el body del request\", body);\r\n//         let html= body.map(t => \"<li>\"+t.label+\"</li>\").join(\"\");\r\n//         html=\"<ul>\"+html+\"</ul>\";\r\n//         console.log(html)\r\n//     })\r\n//     .catch\r\n\r\n\r\n\r\n\r\n// export default () => {\r\n\r\n\r\n    // fetch('http://assets.breatheco.de/apis/fake/todos/user/alesanchezr', {\r\n    //     method: \"PUT\",\r\n    //     body: JSON.stringify(todos),\r\n    //     headers: {\r\n    //         \"Content-Type\": \"application/json\"\r\n    //     }\r\n    // })\r\n    //     .then(resp => {\r\n    //         console.log(resp.ok); // Será true (verdad) si la respuesta es exitosa.\r\n    //         console.log(resp.status); // el código de estado = 200 o código = 400 etc.\r\n    //         console.log(resp.text()); // Intentará devolver el resultado exacto como cadena (string)\r\n    //         return resp.json(); // (regresa una promesa) will try to parse the result as json as return a promise that you can .then for results\r\n    //     })\r\n    //     .then(data => {\r\n    //         //Aquí es donde debe comenzar tu código después de que finalice la búsqueda\r\n    //         console.log(data); //esto imprimirá en la consola el objeto exacto recibido del servidor\r\n    //     })\r\n    //     .catch(error => {\r\n    //         //manejo de errores\r\n    //         console.log(error);\r\n    //     });\r\n\r\n\r\n\r\n//     return (\r\n//         <>\r\n\r\n//         </>\r\n//     )\r\n\r\n// }"]},"metadata":{},"sourceType":"module"}